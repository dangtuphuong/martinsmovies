name: Deploy to AWS with SST

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Install dependencies
        run: npm ci

      - name: Deploy to production
        id: deploy
        run: |
          npx sst deploy --stage production > deploy-output.txt 2>&1
          echo "Deployment completed"
          cat deploy-output.txt

          # Extract the site URL from SST output
          SITE_URL=$(npx sst list outputs --stage production --format json | jq -r '.SiteUrl // empty')
          if [ -n "$SITE_URL" ]; then
            echo "site_url=$SITE_URL" >> $GITHUB_OUTPUT
            echo "✅ Site deployed at: $SITE_URL"
          else
            echo "⚠️ Could not extract site URL"
          fi
        env:
          CI: true
          API_KEY: ${{ secrets.API_KEY }}

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const siteUrl = '${{ steps.deploy.outputs.site_url }}';
            if (siteUrl) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ **Deployment successful!**\n\n **Live site:** ${siteUrl}\n\n*Deployed from commit: ${context.sha.substring(0, 7)}*`
              });
            }

      - name: Create deployment status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const siteUrl = '${{ steps.deploy.outputs.site_url }}';
            const success = '${{ job.status }}' === 'success';

            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: success ? 'success' : 'failure',
              environment_url: siteUrl || undefined,
              description: success ? 'Deployment completed successfully' : 'Deployment failed'
            });
